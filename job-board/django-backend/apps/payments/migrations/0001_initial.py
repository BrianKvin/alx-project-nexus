# Generated by Django 5.1.1 on 2025-08-09 07:14

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PremiumPackage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the premium package (e.g., 'Basic', 'Standard', 'Premium').",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description of what the package offers.",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of the package.",
                        max_digits=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="KSh",
                        help_text="Currency for the package price.",
                        max_length=10,
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        help_text="Duration of the package in days (e.g., 30 for 1 month)."
                    ),
                ),
                (
                    "job_post_limit",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of job postings allowed with this package. 0 for unlimited.",
                    ),
                ),
                (
                    "featured_job_slots",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="Number of jobs that can be featured with this package.",
                    ),
                ),
                (
                    "analytics_access",
                    models.BooleanField(
                        default=False,
                        help_text="Does this package include access to advanced analytics?",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the package is currently available for purchase.",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date when the package was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date when the package was last updated.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Premium Package",
                "verbose_name_plural": "Premium Packages",
                "ordering": ["price"],
            },
        ),
        migrations.CreateModel(
            name="UserSubscription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "start_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Date when the subscription started.",
                    ),
                ),
                (
                    "end_date",
                    models.DateTimeField(
                        help_text="Date when the subscription will expire."
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Indicates if the subscription is currently active.",
                    ),
                ),
                (
                    "auto_renew",
                    models.BooleanField(
                        default=False,
                        help_text="Should the subscription automatically renew?",
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        blank=True,
                        help_text="ID from payment gateway (e.g., Stripe) for this subscription.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date when the subscription record was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date when the subscription record was last updated.",
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        help_text="The premium package associated with this subscription.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subscribers",
                        to="payments.premiumpackage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who holds this subscription.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Subscription",
                "verbose_name_plural": "User Subscriptions",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Amount of the payment.",
                        max_digits=10,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="KSh",
                        help_text="Currency of the payment.",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        help_text="Current status of the payment transaction.",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique transaction ID from the payment gateway.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("card", "Credit/Debit Card"),
                            ("mpesa", "M-Pesa"),
                            ("paypal", "PayPal"),
                            ("bank_transfer", "Bank Transfer"),
                        ],
                        help_text="Method used for the payment.",
                        max_length=50,
                    ),
                ),
                (
                    "payment_gateway_response",
                    models.JSONField(
                        blank=True,
                        help_text="Raw JSON response from the payment gateway for auditing.",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Date and time when the payment record was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Date and time when the payment record was last updated.",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who made the payment.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        help_text="The subscription this payment is for (if applicable).",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="payments",
                        to="payments.usersubscription",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment",
                "verbose_name_plural": "Payments",
                "ordering": ["-created_at"],
            },
        ),
    ]
